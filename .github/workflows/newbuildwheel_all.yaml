name: NewBuildAll
#on: [push, pull_request]
on: [workflow_dispatch] # manual tigger


jobs:
############################################################################
#    Build Sdist
############################################################################
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
 
      - name: Check metadata
        run: "python setup.py check"
      - name: Build sdist
        run: "python setup.py sdist && ls -l dist"

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz
          
############################################################################
#    Build Wheels for windows
############################################################################          
  build_wheels_win:
    name: Make ${{ matrix.os }} wheels  
    runs-on: ${{ matrix.os }}
    env:
      arch: AMD64 
    strategy:
      fail-fast: true
      matrix:
        os:      [windows-latest]    

    steps:       
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
             python-version: '3.7'
 
      - run: copy  pyproject_np1.17.3_miw3738.toml  pyproject_NotUsed.toml
      - uses: pypa/cibuildwheel@v2.16.5
        env:             
             CIBW_ARCHS:   ${{env.arch}}   #all, native AMD64 x86 ARM64
             CIBW_BUILD:   cp37-*  cp38-*        
   
      - run: copy  pyproject_np1.19.3_miw39.toml  pyproject_NotUsed.toml 
      - uses: pypa/cibuildwheel@v2.16.5
        env:             
             CIBW_ARCHS:   ${{env.arch}}   #all, native AMD64 x86 ARM64
             CIBW_BUILD:   cp39-*  cp310-* cp311-*  cp312-*   
             #CIBW_ARCHS_MACOS:        x86_64 arm64                  
            
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

############################################################################
#    Build Wheels for Linux (manyliux)
############################################################################  
        
  build_wheels_linux:
    name: Make ${{ matrix.os }} wheels  
    runs-on: ${{ matrix.os }}
    env:
      arch: x86_64 #  aarch64
      CIBW_SKIP:   '*-musllinux_*' 
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
    strategy:
      fail-fast: true
      matrix:
        os:      [ubuntu-latest]    

    steps:       
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
             python-version: '3.7'
 
      - run: cp  pyproject_np1.17.3_miw3738.toml  pyproject_NotUsed.toml # pyproject.toml
      - uses: pypa/cibuildwheel@v2.16.5
        env:             
             CIBW_ARCHS:   ${{env.arch}}   #all, native AMD64 x86 ARM64
             CIBW_BUILD:   cp37-*  cp38-*   cp39-*  cp310-* cp311-*  cp312-*       
              
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          
############################################################################
#    Build Wheels for Linux (manyliux-aarch64) 
############################################################################             
  build_wheels_linux_aarch64:
    name: Make ${{ matrix.os }} wheels  
    runs-on: ${{ matrix.os }}
    env:
      arch:   aarch64  #  aarch64 x86_64
      CIBW_SKIP:   '*-musllinux_*' 
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
    strategy:
      fail-fast: true
      matrix:
        os:      [ubuntu-latest]    

    steps:  
  
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
             python-version: '3.7'
 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64    #all
   
      - run: cp  pyproject_np1.19.3_miw39.toml  pyproject_NotUed.toml 
      - uses: pypa/cibuildwheel@v2.16.5
        env:             
             CIBW_ARCHS:   ${{env.arch}}   #all, native AMD64 x86 ARM64
             CIBW_BUILD:   cp37-*  cp38-*   cp39-*  cp310-* cp311-*  cp312-*       
       
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

############################################################################
#    Build Wheels for Linux (musl-linux-x86) 
############################################################################            

  build_wheels_musl_linux:
    name: Make ${{ matrix.os }} wheels  
    runs-on: ${{ matrix.os }}
    env:
      arch:   x86_64  #  aarch64 x86_64
      CIBW_SKIP:   '*-musllinux_aarch64' 
    strategy:
      fail-fast: true
      matrix:
        os:      [ubuntu-latest]    

    steps:  
  
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
             python-version: '3.9'
                  
      - run: cp pyproject_np1.25.0_musl_39310311.toml pyproject_NotUed.toml 
      - uses: pypa/cibuildwheel@v2.16.5
        env:             
             CIBW_ARCHS:   ${{env.arch}}   #all, native AMD64 x86 ARM64
             CIBW_BUILD:  cp39-*musllinux*  cp310-*musllinux*  cp311-*musllinux*   cp312-*musllinux*   
              
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

############################################################################
#    Build Wheels for MacOS
############################################################################   
  build_wheels_mac:
    name: Make ${{ matrix.os }} wheels  
    runs-on: ${{ matrix.os }}
    env:
      arch:   x86_64  #  aarch64 x86_64
      CIBW_SKIP:   '*-musllinux_aarch64' 
    strategy:
      fail-fast: true
      max-parallel: 5
      matrix:
        os:      [macos-latest]    #[macos-12]    

    steps:  
  
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
             python-version: '3.9'
                  
      - run: cp pyproject_np1.17.3_miw3738.toml pyproject.toml 
      - uses: pypa/cibuildwheel@v2.16.5
        env:             
             CIBW_ARCHS:  x86_64  arm64  #all, native AMD64 x86 ARM64
             CIBW_BUILD:  cp37-*   cp38-*   cp38-*    cp39-*   cp310-*  cp311-*    cp312-*  
          
             
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl		            
          
  upload_pypi:
    name: Upload to PyPI (prod)
    needs: [  build_sdist , build_wheels_win, build_wheels_linux,build_wheels_linux_aarch64, build_wheels_musl_linux,   build_wheels_mac]
    runs-on: ubuntu-22.04
    #if: github.repository == 'tornadoweb/tornado' && github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__  # zhaokg
          #repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.PYPI_PASSWORD }} 
